#!/bin/bash

home="/home/user"

if [[ ! -d "$home/source" ]]
then
	echo "Source dir doesn't exist"
	exit 1
fi

backup_prev=$(ls "$home" | grep -E "^Backup" | sort -n | tail -1)
now=$(date +"%Y-%m-%d")
now_sec=$(date -d "$now" +"%s")
date_backup_prev=$(echo "$backup_prev" | sed "s/Backup-//")
date_backup_prev_sec=$(date -d "$date_backup_prev" +"%s")
time_difference=$(echo "(${now_sec} - ${date_backup_prev_sec}) / (3600 * 24) " | bc)

if [[ ! -e "$home/backup-report" ]]
then
	touch "$home/backup-report"
fi

if [[ "$time_difference" -ge 7 ]] || [[ "$backup_prev" == "" ]]
then
	mkdir "$home/Backup-${now}"
	for line in $(ls "$home/source")
	do
		cp "$home/source/$line" "$home/Backup-${now}"
	done
	echo -e "[New backup]\tDate ${now}\n\t\tFiles: $(ls "$home/Backup-${now}" | tr '\n' ' ')\n" >> "$home/backup-report"
else
	> changed_files_info.log
	> new_files_info.log
	for line in $(ls "$home/source")
	do
		if [[ ! -f "$home/$backup_prev/$line" ]]
		then
			cp "$home/source/$line" "$home/$backup_prev"
			echo "Copied: $line" >> new_files_info.log
		else
			new_size=$(wc -c "$home/source/$line" | awk '{print $1}')
			old_size=$(wc -c "$home/$backup_prev/$line" | awk '{print 1}')
			if [[ "$new_size" -ne "$old_size" ]]
			then
				mv "$home/$backup_prev/$line" "$home/$backup_prev/$line-${now}"
				echo "[Changed] From: $line To: $line-${now}" >> changed_files_info.log
				cp "$home/source/$line" "$home/$backup_prev/$line"
			fi
		fi
	done
	echo -e "[Change backup]\n\tDate ${date_backup_prev}\n\tNew files:\n$(cat new_files_info.log)\n\tChanged file:\n$(cat changed_files_info.log)" >> "$home/backup-report"
	rm changed_files_info.log 2>/dev/null
	rm new_files_info.log 2>/dev/null
fi
